) %>% add_sf(
data = sf_unnamed_worship$osm_points,
marker = list(
size = 2,
color = I("green")
),
hoverinfo = "text",
text = ~name
)
plot_ly() %>% add_sf(
data = sf_unnamed_taipei$osm_multipolygons,
stroke = I("white"),
hoverinfo = "none"
) %>% add_sf(
data = sf_unnamed_worship$osm_points,
marker = list(
size = 2),
hoverinfo = "text",
text = ~name
)
plot_ly() %>% add_sf(
data = sf_unnamed_taipei$osm_multipolygons,
stroke = I("white"),
hoverinfo = "none"
) %>% add_sf(
data = sf_unnamed_worship$osm_points,
marker = list(
size = 2),
hoverinfo = "text",
text = ~name,
color = I("green")
)
plot_ly() %>% add_sf(
data = sf_unnamed_taipei$osm_multipolygons,
stroke = I("white"),
hoverinfo = "none"
) %>% add_sf(
data = sf_unnamed_worship$osm_points,
marker = list(
size = 2),
hoverinfo = "text",
text = ~name,
color = I("gray")
)
plot_ly() %>% add_sf(
data = sf_unnamed_taipei$osm_multipolygons,
stroke = I("white"),
hoverinfo = "none"
) %>% add_sf(
data = sf_unnamed_worship$osm_points,
marker = list(
size = 2),
hoverinfo = "text",
text = ~name,
color = I("gray"),
stroke = I("black")
)
osmdata::getbb("Orchid Island")
osmdata::getbb("Orchid Island (10730513)")
osmdata::getbb("Orchid Island (10730513)") -> bbLanyu
bbLanyu %>% opq()
bbLanyu %>% opq() -> opqLanyu
opqLanyu %>% add_osm_feature(
place = "island"
)
bbLanyu
opqLanyu %>% add_osm_feature(
place = "island"
)
opqLanyu %>% add_osm_feature(
key = "place",
value = "island"
)
opqLanyu %>% add_osm_feature(
key = "place",
value = "island"
)->opqLanyu_place
opqLanyu_place %<>% unname_osmdata_sf()
opqLanyu_place %>% unname_osmdata_sf() ->opqLanyu_place
opqLanyu_place %>% unname_osmdata_sf()
opqLanyu_place
opqLanyu_place %>% osmdata::unname_osmdata_sf()
opqLanyu %>% add_osm_feature(
key = "place",
value = "island"
)->opqLanyu_place
opqLanyu_place
opqLanyu_place %>% osmdata::unname_osmdata_sf()
opqLanyu %>% add_osm_feature(
key = "place",
value = "island"
)->opqLanyu_place
opqLanyu_place
opqLanyu_place %>% osmdata::osmdata_sf()
opqLanyu_place %>% osmdata::osmdata_sf() -> sf_opqLanyu_place
sf_opqLanyu_place %>% osmdata::unname_osmdata_sf() -> sf_opqLanyu_place
View(sf_opqLanyu_place)
plot_ly() %>%
add_sf(
data = sf_opqLanyu_place
)
plot_ly() %>%
add_sf(
data = sf_opqLanyu_place$osm_multipolygons
)
opqLanyu %>% add_osm_feature(
key = "admin_level",
value = "9"
)->opqLanyu_village
opqLanyu_village
opqLanyu_village %>% osmdata::osmdata_sf() -> sf_opqLanyu_village
sf_opqLanyu_village %>% osmdata::unname_osmdata_sf() -> sf_opqLanyu_village
View(sf_opqLanyu_village)
sf_opqLanyu_village[["osm_polygons"]][["name"]]%>%unique()
sf_opqLanyu_village[["osm_multipolygons"]][["name"]]
plot_ly() %>%
add_sf(
data = sf_opqLanyu_place$osm_multipolygons
) %>%
add_sf(
data = sf_opqLanyu_village$osm_multipolygons
)
plot_ly() %>%
add_sf(
data = sf_opqLanyu_place$osm_multipolygons
) %>%
add_sf(
data = sf_opqLanyu_village$osm_multipolygons,
stroke = I("gray")
)
View(sf_opqLanyu_village)
plot_ly() %>%
add_sf(
data = sf_opqLanyu_place$osm_multipolygons
) %>%
add_sf(
data = sf_opqLanyu_village$osm_multipolygons,
stroke = I("gray"),
text = ~name
)
plot_ly() %>%
add_sf(
data = sf_opqLanyu_place$osm_multipolygons
) %>%
add_sf(
data = sf_opqLanyu_village$osm_multipolygons,
stroke = I("gray"),
hoverinfo = "text",
text = ~name
)
plot_ly() %>%
add_sf(
data = sf_opqLanyu_place$osm_multipolygons
) %>%
add_sf(
data = sf_opqLanyu_village$osm_multipolygons,
stroke = I("gray"),
hoverinfo = "none",
text = ~name
)
plot_ly() %>%
add_sf(
data = sf_opqLanyu_place$osm_multipolygons
) %>%
add_sf(
data = sf_opqLanyu_village$osm_multipolygons,
stroke = I("gray"),
hoverinfo = "text",
text = ~name
)
View(sf_opqLanyu_village)
sf_opqLanyu_village$osm_multipolygons$name
plot_ly() %>%
add_sf(
data = sf_opqLanyu_village$osm_multipolygons,
stroke = I("gray"),
hoverinfo = "text",
text = ~name
)
plot_ly() %>%
add_sf(
data = sf_opqLanyu_place$osm_multipolygons
) %>%
add_sf(
data = sf_opqLanyu_village$osm_multipolygons,
stroke = I("gray"),
hoverinfo = "text",
text = ~name
)
plot_ly() %>%
add_sf(
data = sf_opqLanyu_village$osm_multipolygons,
stroke = I("gray"),
hoverinfo = "text",
text = ~name
)
View(sf_opqLanyu_village)
knitr::opts_chunk$set(echo = TRUE)
?osmdata::osmdata_sf()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(plotly)
# Paste your drake Rdata loading here
xfun::download_file("https://www.dropbox.com/s/awx8datq45kgpzq/overview_drake.Rdata?dl=1", mode="wb")
load("overview_drake.Rdata")
.root <- rprojroot::is_rstudio_project$make_fix_file()
drake$.updateCache()
drake$source_plan()
drake$makePlan()
drake$loadTarget$pltWithoutI()
pltWithoutI
drake$clipCommand$pltWithoutI() # store in your clipboard after running this command
library(sf)
sf_counties4$geometry
osmdata::getbb("Taiwan") -> bb_taiwan
osmdata::opq(bb_taiwan) %>%
osmdata::add_osm_feature(key="admin_level", value="6") -> opq_twCounties6
osmdata::opq(bb_taiwan) %>%
osmdata::add_osm_feature(key="admin_level", value="4") -> opq_twCounties4
list_sf_fun <- function(opq_twCounties6){
osmdata::osmdata_sf(opq_twCounties6) -> list_sf_twCounties6
osmdata::unname_osmdata_sf(list_sf_twCounties6) ->
list_sf_twCounties_unnamed6
return(list_sf_twCounties_unnamed6)
}
opq_twCounties6 %>%
list_sf_fun() -> list_sf_twCounties_unnamed6
opq_twCounties4 %>%
list_sf_fun() -> list_sf_twCounties_unnamed4
sf_counties4 <- list_sf_twCounties_unnamed4$osm_multipolygons
xfun::download_file("https://www.dropbox.com/s/zwlewu5enjlkrgy/maps_drake.Rdata?dl=1", mode="wb")
load("maps_drake.Rdata")
library(sf)
sf_counties4$geometry
sf::st_crs(sf_counties4$geometry)
drake$loadTarget$heritageData()
.root <- rprojroot::is_rstudio_project$make_fix_file()
drake$.updateCache()
drake$source_plan()
drake$makePlan()
library(dplyr)
library(ggplot2)
library(plotly)
# Paste your drake Rdata loading here
xfun::download_file("https://www.dropbox.com/s/zwlewu5enjlkrgy/maps_drake.Rdata?dl=1", mode="wb")
load("maps_drake.Rdata")
.root <- rprojroot::is_rstudio_project$make_fix_file()
drake$.updateCache()
drake$source_plan()
drake$makePlan()
drake$loadTarget$sf_unnamed_taipei()
drake$loadTarget$heritageData()
knitr::opts_chunk$set(echo = TRUE)
.root <- rprojroot::is_rstudio_project$make_fix_file()
drake$.updateCache()
drake$source_plan()
drake$makePlan()
heritageData <- jsonlite::fromJSON("https://data.boch.gov.tw/data/opendata/v2/assetsCase/1.1.json")
heritageData
View(heritageData)
drake$makePlan()
knitr::opts_chunk$set(echo = TRUE)
xfun::download_file("https://www.dropbox.com/s/s4mv5ebhsqanpew/heritage.Rdata?dl=1", mode="wb")
load("heritage.Rdata")
View(heritageData)
drake$loadTarget$heritageData()
heritageData[1,]
heritageData[1,][c("latitude","lontitude")]
heritageData[1,][c("latitude","longtitude")]
heritageData[1,][c("latitude","longtitude")]
heritageData[1,][c("longtitude")]
heritageData[1,]["longtitude"]
heritageData[1,]$longitude
heritageData[1,][c("longitude")]
heritageData[1,][c("longitude","latitude")]
heritageData[1,][c("longitude","latitude")] %>% as.matrix()
library(dplyr)
library(ggplot2)
library(plotly)
library(sf)
heritageData %>% select(caseName, longitude, latitude) %>%
na.omit() %>%
sf::st_point()
list_points <- vector("list", length(nrow()))
list_points <- vector("list", length(nrow))
heritageData[1,][c("longitude","latitude")] %>% as.matrix()
list_points <- vector("list", length(nrow()))
heritageData[1,][c("longitude","latitude")] %>%
as.matrix() %>%
sf::st_point()
heritageData %>% select(caseName, longitude, latitude) %>%
na.omit() -> heritageDataComplete
list_points <- vector("list", length(nrow(heritageDataComplete)))
list_points <- vector("list", length(nrow(heritageDataComplete)))
for(i in 1:nrow(heritageDataComplete)){
list_points[[i]] = {
heritageDataComplete[i, ][c("longitude", "latitude")] %>%
as.matrix() %>%
sf::st_point()
}
}
View(list_points)
sfc_points <- sf::st_sfc(list_points)
sf_heritage <- {
caseName = heritageDataComplete$caseName,
sf_heritage <- {
caseName = heritageDataComplete$caseName,
sf_heritage <- data.frame{
sf_heritage <- data.frame(
caseName = heritageDataComplete$caseName
geometry = sfc_points
sf_heritage <- data.frame(
caseName = heritageDataComplete$caseName,
geometry = sfc_points
)
sf_heritage <- sf::st_as_sf(sf_heritage)
sf_taipei <- sf_unnamed_taipei$osm_multipolygons
View(sf_taipei)
plot_ly() %>%
add_sf(
data = sf_taipei
)
plot_ly() %>%
add_sf(
data = sf_taipei
) %>%
add_sf(
data = sf_taipei
)
plot_ly() %>%
add_sf(
data = sf_taipei
) %>%
add_sf(
data = sf_heritage
)
sf_taipei
sf_taipei$geometry
crsX <- sf::st_crs(sf_taipei)
View(crsX)
crsX <- sf::st_crs(sf_taipei$geometry)
View(crsX)
sf::st_set_crs(sf_heritage, crsX) -> sf_heritage
sf_heritage
plot_ly() %>%
add_sf(
data = sf_taipei
) %>%
add_sf(
data = sf_heritage
)
sf::st_bbox(sf_taipei)
sf::st_bbox(sf_taipei$geometry)
sf::st_bbox(sf_taipei$geometry) -> bb_taipei
sf::st_crop(sf_heritage$geometry, bb_taipei)
sf::st_crop(sf_heritage, bb_taipei)
sf::st_crop(sf_heritage, bb_taipei) -> sf_heritage
plot_ly() %>%
add_sf(
data = sf_taipei
) %>%
add_sf(
data = sf_heritage
)
plot_ly() %>%
add_sf(
data = sf_taipei
) %>%
add_sf(
data = sf_heritage,
color = I("gray")
)
plot_ly() %>%
add_sf(
data = sf_taipei
) %>%
add_sf(
data = sf_heritage,
color = I("gray"),
stroke = I("black")
)
plot_ly() %>%
add_sf(
data = sf_taipei
) %>%
add_sf(
data = sf_heritage,
color = I("blue"),
stroke = I("black")
)
plot_ly() %>%
add_sf(
data = sf_taipei
) %>%
add_sf(
data = sf_heritage,
color = I("gray"),
stroke = I("black")
)
plot_ly() %>%
add_sf(
data = sf_taipei
) %>%
add_sf(
data = sf_heritage,
color = I("green"),
stroke = I("black")
)
plot_ly() %>%
add_sf(
data = sf_taipei
) %>%
add_sf(
data = sf_heritage,
color = I("lightgreen"),
stroke = I("black")
)
plot_ly() %>%
add_sf(
data = sf_taipei
) %>%
add_sf(
data = sf_heritage,
color = I("lightblue"),
stroke = I("black")
)
install.packages("rmapshaper")
?rmapshaper::ms_simplify()
View(sf_counties4)
View(heritageData)
library(htmltools)
drake::drake_plan(
titletag = tags$title("this is title"),
ptag = tags$p("this is paragraph"),
h1tag = tags$h1("this is h1"),
allbody = tagList(ptag, h1tag),
myHtml = tags$html(
tags$head(titletag),
tags$body(allbody)
)
)
View(drake)
library(htmltools)
##藍圖
drake::drake_plan(
titletag = tags$title("this is title"),
ptag = tags$p("this is paragraph"),
h1tag = tags$h1("this is h1"),
allbody = tagList(ptag, h1tag),
myHtml = tags$html(
tags$head(titletag),
tags$body(allbody)
)
)
##執行
##藍圖
drake_html <-
drake::drake_plan(
titletag = tags$title("this is title"),
ptag = tags$p("this is paragraph"),
h1tag = tags$h1("this is h1"),
allbody = tagList(ptag, h1tag),
myHtml = tags$html(
tags$head(titletag),
tags$body(allbody)
)
)
##執行
View(drake_html)
drake::make(drake_html)
drake::loadd(myHtml)
View(myHtml)
##存成html
save_html(myHtml, file = "hellofrom Drake.html")
##visualize component dependency
drake::vis_drake_graph(drake_html)
##visualize component dependency
drake::vis_drake_graph(drake_html)
remotes::install_github("tpemartin/rmd2drake", force=T)
remotes::install_github("tpemartin/econR", force=T)
econR::Web()
xfun::download_file("https://www.dropbox.com/s/kk5r5jgrl4fh2ub/rmd2drakeExample.Rmd?dl=1", mode="wb")
xfun::download_file("https://www.dropbox.com/s/kk5r5jgrl4fh2ub/rmd2drakeExample.Rmd?dl=1")
View(drake_html)
View(drake)
drake$source_plan()
drake$source_plan()
drake$makePlan()
drake$load(myHTML)
View(myHTML)
drake::vis_drake_graph()
save_html(myHTML, file = "rmd2drakeEx.html")
drake$update()
drake$update()
drake$update()
drake$update()
tag_h1 <- tags$h3("My First Heading Upd")
drake$update()
drake$loadTarget$myHTML()
save_html(myHTML, file = "rmd2drakeExample.html")
drake$update()
drake$loadTarget$myHTML()
library(htmltools)
library(drake)
drake$source_plan()
drake$source_plan()
drake$source_plan()
drake$source_plan()
drake$update()
drake$loadTarget$myHTML()
save_html(myHTML, file = "rmd2drakeExample.html")
